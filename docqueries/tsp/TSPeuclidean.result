BEGIN;
BEGIN
SET client_min_messages TO NOTICE;
SET
SET log_min_duration_statement=-1;
SET
SET extra_float_digits=-3;
SET
SET client_min_messages TO WARNING;
SET
/* -- q1 */
SELECT * FROM pgr_TSPeuclidean(
  $$
  SELECT id, st_X(geom) AS x, st_Y(geom)AS y  FROM vertices ORDER BY id
  $$);
 seq | node |      cost      |   agg_cost
-----+------+----------------+---------------
   1 |    1 |              0 |             0
   2 |    3 |              1 |             1
   3 |    7 |              1 |             2
   4 |    6 |              1 |             3
   5 |    5 |              1 |             4
   6 |   10 |  1.41421356237 | 5.41421356237
   7 |    8 |   2.2360679775 | 7.65028153987
   8 |    4 |            0.5 | 8.15028153987
   9 |    2 |            1.5 | 9.65028153987
  10 |    9 |  1.58113883008 |   11.23142037
  11 |   12 |  1.41421356237 | 12.6456339323
  12 |   13 | 0.860232526704 |  13.505866459
  13 |   11 | 0.583095189485 | 14.0889616485
  14 |   16 |              1 | 15.0889616485
  15 |   15 |              1 | 16.0889616485
  16 |   17 |              2 | 18.0889616485
  17 |   14 |  1.11803398875 | 19.2069956373
  18 |    1 |  4.03112887415 | 23.2381245114
(18 rows)

/* -- q2 */
SELECT *
FROM pgr_TSPeuclidean($$SELECT * FROM wi29 ORDER BY id$$)
WHERE seq = 30;
 seq | node |     cost      |   agg_cost
-----+------+---------------+---------------
  30 |    1 | 9639.27159512 | 35008.9065703
(1 row)

/* -- q3 */
WITH
tsp_results AS (SELECT seq, geom FROM pgr_TSPeuclidean($$SELECT * FROM wi29$$) JOIN wi29 ON (node = id))
SELECT ST_MakeLine(ARRAY(SELECT geom FROM tsp_results ORDER BY seq));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    st_makeline


(1 row)

/* -- q4 */
/* This query is used to create the optimal solution image visually deduced the ordering */
SELECT 1 AS gid, ST_MakeLine(ARRAY(
  SELECT geom FROM unnest(array[1,2,6,10,11,12,15,19,18,17,21,22,23,29,28,26,20,25,27,24,16,14,13,9,7,3,4,8,5,1])
  JOIN wi29 ON (unnest = id)));
 gid |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    st_makeline

   1 |
(1 row)

ROLLBACK;
ROLLBACK
